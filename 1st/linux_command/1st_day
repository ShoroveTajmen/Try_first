For showing calander---->  cal
For showing date and time----> date
Test current location----> pwd (print working directory)
Move one place to another---> cd (file name/)
If we want to write a text----> echo "hello"
If we want to make directory---> mkdir (directory name) OR
Created directory with massage----> mkdir -v (directory name) OR
For creating multiple directory at a time---> mkdir (directory name) (directory name)
"ls" ----> ls to display the contents of current directory
"less" ----> using less to view files,,,,,,less is capable of displaying text in other languages,,,,less can also open more than one file at a time when less to view multiple files the command {:n} is used to navigate to the next file,,,and command {:P} is used to navigate to the previous file 
"ls" ---> using ls to list the contents of a non-current directory using a relative path
"ls .." ---> we call that dot dot refers to the parent of the current working directory


"Identifiying and understanding symbolic links"
----> a symbolic link is a term for any file that contains a reference to another file or directory in the form of an absolute or relative path

COMMAND:-----
13. ls -l /usr/bin/emacs/  or you can use another fie name
14. file /usr/bin/emacs


"Using ls to view hidden file"
"normally ls ignore any files whose name begins with dot"
 "for showing hidden file"
 COMMAND--->
 15. ls -a


 "using ls with additional options"
"displaying current working directory using ls"
"the -l flag uses for a long listing format"
COMMAND--->

16. ls -l

"for each file this information includes the file type,file permissions,the owner,the file size,the modification date and the file name"
COMMAND--->

17. ls -l Desktop/


"using this command ls -l aren't particularly readable for file size"
"by using the -h flag ls will more human readable format"
COMMAND---->

18. ls -lh Desktop/

"or we can use"
COMMAND---->

19. ls -l -h Desktop/

" this two commands are equivalent"





"to deleting a file or directories using rm command"
COMMAND--->

20. rm file_name   (by default rm doesn't dlt directories)


"using rm -i flag you get a confirmation before deleting a file"
COMMAND--->

21. rm -i file_name.md

"rm -v to use for confirm msg which file was deleted"
COMMAND--->

22. rm -v file_name.md


"confirming once before removing more than three files, or when removing recursively"
COMMAND--->

23. rm -r -I -v directory_name



"using cd to navigate to a directory using a relative path"

COMMAND--->
24. cd .--->  dot reffers to current working directory
25. cd ..---> dot dot refers to parent of the current working directory
26. cd ../.. ---> dot dot slash dot dot refers to the parent of the parent current working directory


"for creating a file"

COMMAND--->

27. touch file_name.txt


"using mv to move files"
COMMAND--->

28. mv file_name destination name(directory_name)


"using ln to create a symbolic link"

COMMAND--->

29. ln -s test1(directory_name)/abc(file_name) cccc(symbolic link)

"when we Created a symbolic link to taht file with the same name "

COMMAND-->

30. ln -s test1(directory_name)/abc(file_name)




"determine file type"
COMMAND---->

31. file (file_name)/


"using cp to copy file in current working directory"

COMMAND--->

32. cp directory_name(jei directory theke file choose krbo)/file_name  file_name(j file amra copy krte chai)
33. cp file_name  directory_name(jekhane amra copy kre rakhte chai)



"using cp to copy a single directory"

COMMAND--->
34. cp -r directory_name(jekhan theke copy krte chai)  directory_name(j directory_name ta copy krbo)







FILE PERMISSIONS:
------------------------

->  permissions for a file or directory maybe restricted by 3 types

      1. r - read
      2. w - write
      3. x - execute = running a program

->  each permissions (rwx) can be controlled three levels

     1. u - user = yourself
     2. g - group = can be people in the same project
     3. o - other = everyone on the system


->  file or directory permissions can be displayed by run using this command
COMMAND--->
35. ls -l


->   command to change permissions:
COMMAND---->
36. chmod

-> for restricted write option in group section:
COMMAND-->
37. chmod g-w (file_name)


-> restricted all read option in this file:
COMMAND-->
38. chmod a-r (file_name)


-> restricted write option from user:
COMMAND-->
39. chmod u-w (file_name)


-> to showing what's changed in this file:
COMMAND-->
40. ls -l (file_name)



-> when we restricted all permissions at this moment we can't remove this file
so,, if we return our permissions then we uses this command:

COMMAND-->
41. chmod u+rw (file_name)
42. chmod g+rw (file_name)
43. chmod o+r (files)


-> if we remove all x(execution) option from a diretory then we can't 
enter this directory





